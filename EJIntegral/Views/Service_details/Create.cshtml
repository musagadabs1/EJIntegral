@model EJIntegral.Models.Service_Details
@using EJIntegral.Helpers

@{
    ViewBag.Title = "Create";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>Enter Service Details</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

        <div class="row">
            <div class="col-md-6">
                <div class="card">
                    <div class="card-header">
                        <h3 class="card-title">Entry Details</h3>
                    </div>
                    <div class="card-body">
                        <div class="form-group">
                            @Html.LabelForRequired(model => model.FileNo,"File Number", htmlAttributes: new { @class = "control-label" })

                            @Html.EditorFor(model => model.FileNo, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.FileNo, "", new { @class = "text-danger" })
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.DateOfFirstAppt, htmlAttributes: new { @class = "control-label" })
                            @Html.EditorFor(model => model.DateOfFirstAppt, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.DateOfFirstAppt, "", new { @class = "text-danger" })
                        </div>
                        <div class="form-group">
                            @Html.LabelForRequired(model => model.SignatoryToApptLetter,"Signatory to Appointment Letter", htmlAttributes: new { @class = "control-label" })
                            @Html.EditorFor(model => model.SignatoryToApptLetter, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.SignatoryToApptLetter, "", new { @class = "text-danger" })
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.ConfirmationDate, htmlAttributes: new { @class = "control-label" })
                            @Html.EditorFor(model => model.ConfirmationDate, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.ConfirmationDate, "", new { @class = "text-danger" })
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.Entry_Rank, htmlAttributes: new { @class = "control-label" })
                            @Html.EditorFor(model => model.Entry_Rank, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Entry_Rank, "", new { @class = "text-danger" })
                        </div>
                        <div class="form-group">
                            @Html.LabelFor(model => model.Deparment, htmlAttributes: new { @class = "control-label" })
                            @Html.DropDownListFor(model => model.Deparment, new SelectList(ViewBag.Departments, "Value", "Text"), null, htmlAttributes: new { @class = "custom-select-sm form-control", @id = "dept", onchange = "getDesignations()" })
                            @Html.ValidationMessageFor(model => model.Deparment, "", new { @class = "text-danger" })
                        </div>
                        <div class="form-group">
                            @Html.LabelFor(model => model.Designation, htmlAttributes: new { @class = "control-label" })
                            <select id="Designation" class="form-control designationClass"></select>
                            @Html.ValidationMessageFor(model => model.Designation, "", new { @class = "text-danger" })
                        </div>
                        <div class="form-group">
                            @Html.LabelForRequired(model => model.Entry_GradeLevel,"Entry Grade", htmlAttributes: new { @class = "control-label" })
                            @Html.DropDownListFor(model => model.Entry_GradeLevel, new SelectList(ViewBag.GradeLevel, "Value", "Text"), null, htmlAttributes: new { @class = "custom-select-sm form-control", @id = "entryGradeLevel" })
                            @Html.ValidationMessageFor(model => model.Entry_GradeLevel, "", new { @class = "text-danger" })
                        </div>
                        <div class="form-group">
                            @Html.LabelForRequired(model => model.Step,"Entry Step", htmlAttributes: new { @class = "control-label" })
                            @Html.DropDownListFor(model => model.Step, new SelectList(ViewBag.Step, "Value", "Text"), null, htmlAttributes: new { @class = "custom-select-sm form-control", @id = "step" })
                            @Html.ValidationMessageFor(model => model.Step, "", new { @class = "text-danger" })
                        </div>
                        <div class="form-group">
                            @Html.LabelForRequired(model => model.ConsolidatedSalary,"Entry Consolidated Salary", htmlAttributes: new { @class = "control-label" })
                            @Html.EditorFor(model => model.ConsolidatedSalary, new { htmlAttributes = new { @class = "form-control", @id = "conSalary" } })
                            @Html.ValidationMessageFor(model => model.ConsolidatedSalary, "", new { @class = "text-danger" })
                        </div>


                        <div class="form-group">
                            @Html.LabelFor(model => model.PlaceOfPosting, htmlAttributes: new { @class = "control-label" })
                            @Html.EditorFor(model => model.PlaceOfPosting, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.PlaceOfPosting, "", new { @class = "text-danger" })
                        </div>
                        <div class="form-group">
                            @Html.LabelForRequired(model => model.Qualification,"Entry Qualification", htmlAttributes: new { @class = "control-label" })
                            @Html.DropDownListFor(model => model.Qualification, new SelectList(ViewBag.Qualification, "Value", "Text"), null, htmlAttributes: new { @class = "custom-select-sm form-control", @id = "qualification" })
                            @Html.ValidationMessageFor(model => model.Qualification, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
            </div>
            <div class="col-md-6">
                <div class="card">
                    <div class="card-header">
                        <h3 class="card-title">Current Details</h3>
                    </div>
                    <div class="card-body">
                        <div class="form-group">
                            @Html.LabelForRequired(model => model.YearOfLastPromotion,"Year of Last Promotion", htmlAttributes: new { @class = "control-label" })
                            @Html.EditorFor(model => model.YearOfLastPromotion, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.YearOfLastPromotion, "", new { @class = "text-danger" })
                        </div>
                        <div class="form-group">
                            @Html.LabelFor(model => model.CurrentRank, htmlAttributes: new { @class = "control-label" })
                            @Html.EditorFor(model => model.CurrentRank, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.CurrentRank, "", new { @class = "text-danger" })
                        </div>
                        <div class="form-group">
                            @Html.LabelForRequired(model => model.CurrentQualification,"Current Qualification", htmlAttributes: new { @class = "control-label" })
                            @Html.DropDownListFor(model => model.CurrentQualification, new SelectList(ViewBag.Qualification, "Value", "Text"), null, htmlAttributes: new { @class = "custom-select-sm form-control", @id = "currentQualification" })
                            @Html.ValidationMessageFor(model => model.CurrentQualification, "", new { @class = "text-danger" })
                        <div class="form-group">
                            @Html.LabelFor(model => model.CurrentDesignation, htmlAttributes: new { @class = "control-label" })
                            <select id="CurrentDesignation" class="form-control designationClass"></select>
                            @Html.ValidationMessageFor(model => model.CurrentDesignation, "", new { @class = "text-danger" })
                        </div>
                        <div class="form-group">
                            @Html.LabelForRequired(model => model.CurrentGradeLevel,"Current Grade", htmlAttributes: new { @class = "control-label" })
                            @Html.DropDownListFor(model => model.CurrentGradeLevel, new SelectList(ViewBag.GradeLevel, "Value", "Text"), null, htmlAttributes: new { @class = "custom-select-sm form-control", @id = "currentGradeLevel" })
                            @Html.ValidationMessageFor(model => model.CurrentGradeLevel, "", new { @class = "text-danger" })
                        </div>
                        <div class="form-group">
                            @Html.LabelForRequired(model => model.CurrentStep,"Current Step", htmlAttributes: new { @class = "control-label" })
                            @Html.DropDownListFor(model => model.CurrentStep, new SelectList(ViewBag.Step, "Value", "Text"), null, htmlAttributes: new { @class = "custom-select-sm form-control", @id = "currentStep" })
                            @Html.ValidationMessageFor(model => model.CurrentStep, "", new { @class = "text-danger" })
                        </div>
                        <div class="form-group">
                            @Html.LabelForRequired(model => model.CurrentConsolidatedSalary,"Current Consolidated Salary", htmlAttributes: new { @class = "control-label" })
                            @Html.EditorFor(model => model.CurrentConsolidatedSalary, new { htmlAttributes = new { @class = "form-control", @id = "currentConSalary" } })
                            @Html.ValidationMessageFor(model => model.CurrentConsolidatedSalary, "", new { @class = "text-danger" })
                        </div>
                        <div class="form-group">
                            @Html.LabelFor(model => model.BankName, htmlAttributes: new { @class = "control-label" })
                            @Html.EditorFor(model => model.BankName, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.BankName, "", new { @class = "text-danger" })
                        </div>
                        <div class="form-group">
                            @Html.LabelFor(model => model.AccountNumber, htmlAttributes: new { @class = "control-label" })
                            @Html.EditorFor(model => model.AccountNumber, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.AccountNumber, "", new { @class = "text-danger" })
                        </div>
                        <div class="form-group">
                            @Html.LabelFor(model => model.BVN, htmlAttributes: new { @class = "control-label" })
                            @Html.EditorFor(model => model.BVN, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.BVN, "", new { @class = "text-danger" })
                        </div>
                        <div class="form-group">
                            @Html.LabelFor(model => model.Allowances, htmlAttributes: new { @class = "control-label" })
                            @Html.EditorFor(model => model.Allowances, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Allowances, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
            </div>
        </div>
        </div>
        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <button type="button" class="btn btn-primary" id="saveServiceDetails">Save</button>
            </div>
        </div>
    </div>
}

@section Scripts{
    <script>
        $(document).ready(function () {
            $('#currentStep').change(function () {
                getCurrentSalary();

            });

            $('#currentGradeLevel').change(function () {
                getCurrentSalary();

            });

            //Save Service Details
            $('#saveServiceDetails').click(function () {
                saveServiceDetails();
            });


            //
            $('#step').change(function () {
                getSalary();
            })

            $('#entryGradeLevel').change(function () {
                getSalary();
            })
        });
        function getSalary() {

            var grade = $("#entryGradeLevel").val();
            var step = $("#step").val();
            $.ajax({
                url: '@Url.Action("GetSalary", "Service_Details")',
                type: 'POST',
                datatype: 'application/json',
                contentType: 'application/json',
                data: JSON.stringify({
                    gradeId: grade,
                    stepId: step
                }),
                success: function(result)
                {
                    $("#conSalary").html("");

                    $("#conSalary").val(result);


                },
                error: function()
                {
                    alert("Whooaaa! Something went wrong..")
                },
            });
        }

        //currentDesignation
        function currentgetDesignations() {
            //debugger;
            var depId = $("#dept").val();
            $.ajax({
                url: '@Url.Action("GetDesignationList", "Service_Details")',
                type: 'POST',
                datatype: 'application/json',
                contentType: 'application/json',
                data: JSON.stringify({
                    deptId: depId
                }),
                success: function(result)
                {
                    $(".designationClass").html("");
                   $.each($.parseJSON(result), function(i, da)
                   {
                       $(".designationClass").append($('<option></option>').val(da.Id).html(da.DesignationName))
                   })

                },
                error: function()
                {
                    alert("Whooaaa! Something went wrong..")
                },
            });
        }

        function getDesignations() {
            //debugger;
            var lgaId = $("#dept").val();
            $.ajax({
                url: '@Url.Action("GetDesignationList", "Service_Details")',
                type: 'POST',
                datatype: 'application/json',
                contentType: 'application/json',
                data: JSON.stringify({
                    deptId: lgaId
                }),
                success: function(result)
                {
                    $(".designationClass").html("");
                   $.each($.parseJSON(result), function(i, da)
                   {
                       $(".designationClass").append($('<option></option>').val(da.Id).html(da.DesignationName))
                   })

                },
                error: function()
                {
                    alert("Whooaaa! Something went wrong..")
                },
            });
        }

        @*function getCurrentDesignations() {
            //debugger;
            var lgaId = $("#dept").val();
            $.ajax({
                url: '@Url.Action("GetDesignationList", "Service_Details")',
                type: 'POST',
                datatype: 'application/json',
                contentType: 'application/json',
                data: JSON.stringify({
                    lgId: lgaId
                }),
                success: function(result)
                {
                    $("#designation").html("");
                   $.each($.parseJSON(result), function(i, da)
                   {
                       $("#designation").append($('<option></option>').val(da.development_area_name).html(da.development_area_name))
                   })

                },
                error: function()
                {
                    alert("Whooaaa! Something went wrong..")
                },
            });
        }*@

        //Saving service_details to database
        function saveServiceDetails() {
            var serviceDetail = new Object();

            //Service Details properties
            serviceDetail.FileNo = $('#FileNo').val();
            serviceDetail.DateOfFirstAppt = $('#DateOfFirstAppt').val();
            serviceDetail.SignatoryToApptLetter = $('#SignatoryToApptLetter').val();
            serviceDetail.ConfirmationDate = $('#ConfirmationDate').val();
            serviceDetail.Entry_Rank = $('#Entry_Rank').val();
            serviceDetail.Deparment = $('#dept').val();
            serviceDetail.Designation = $('#Designation').val();
            serviceDetail.Entry_GradeLevel = $('#entryGradeLevel').val();
            serviceDetail.Step = $('#step').val();
            serviceDetail.ConsolidatedSalary = $('#conSalary').val();
            serviceDetail.PlaceOfPosting = $('#PlaceOfPosting').val();
            serviceDetail.Qualification = $('#qualification').val();
            serviceDetail.YearOfLastPromotion = $('#YearOfLastPromotion').val();
            serviceDetail.CurrentRank = $('#CurrentRank').val();
            serviceDetail.CurrentQualification = $('#currentQualification').val();
            serviceDetail.CurrentDesignation = $('#CurrentDesignation').val();
            serviceDetail.CurrentGradeLevel = $('#currentGradeLevel').val();
            serviceDetail.CurrentStep = $('#currentStep').val();
            serviceDetail.CurrentConsolidatedSalary = $('#currentConSalary').val();
            serviceDetail.BankName = $('#BankName').val();
            serviceDetail.AccountNumber = $('#AccountNumber').val();
            serviceDetail.BVN = $('#BVN').val();
            serviceDetail.Allowances = $('#Allowances').val();


            if (serviceDetail != null) {
                $.ajax({
                    type: "POST",
                    url: '@Url.Action("SaveServiceDetails", "Service_Details")',
                    data: JSON.stringify(serviceDetail),
                    contentType: "application/json; charset=utf-8",
                    dataType: "json",
                    success: function (response) {
                        if (response != null) {
                            alert("Record Saved.");
                            var controllerUrl = '@Url.Action("Create", "Documents")';
                            window.location.href = controllerUrl;
                        } else {
                            alert("Something went wrong");
                        }
                    },
                    failure: function (response) {
                        alert(response.responseText);
                    },
                    error: function (response) {
                        alert(response.responseText);
                    }
                });
            }  

        }



        function getCurrentSalary() {

            var grade = $("#currentGradeLevel").val();
            var step = $("#currentStep").val();
            $.ajax({
                url: '@Url.Action("GetSalary", "Service_Details")',
                type: 'POST',
                datatype: 'application/json',
                contentType: 'application/json',
                data: JSON.stringify({
                    gradeId: grade,
                    stepId: step
                }),
                success: function(result)
                {
                    $("#currentConSalary").html("");

                    $("#currentConSalary").val(result);


                },
                error: function()
                {
                    alert("Whooaaa! Something went wrong..")
                },
            });
        }
    </script>

}